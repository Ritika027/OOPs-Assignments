package Assignment8;
import java.io.*;
import java.util.*;

class Student implements Serializable {
    int studentId;
    String name;
    String rollNo;
    String studentClass;
    double marks;
    String address;

    public Student(int studentId, String name, String rollNo, String studentClass, double marks, String address) {
        this.studentId = studentId;
        this.name = name;
        this.rollNo = rollNo;
        this.studentClass = studentClass;
        this.marks = marks;
        this.address = address;
    }

    public void printStudentDetails() {
        System.out.println("ID: " + studentId + ", Name: " + name + ", Roll No: " + rollNo +
                           ", Class: " + studentClass + ", Marks: " + marks + ", Address: " + address);
    }
}

public class Assignment8 {
    static List<Student> studentList = new ArrayList<>();
    static final String DATABASE_FILE = "students.dat";

    // Load student data from the file
    public static void loadDatabase() {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(DATABASE_FILE))) {
            studentList = (List<Student>) ois.readObject();
            System.out.println("Data loaded successfully.");
        } catch (FileNotFoundException e) {
            System.out.println("No previous data found. Starting fresh...");
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    // Save student data to the file
    public static void saveDatabase() {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(DATABASE_FILE))) {
            oos.writeObject(studentList);
            System.out.println("Data saved successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Create a new student
    public static void createStudent(Scanner sc) {
        System.out.print("Enter Student ID: ");
        int id = sc.nextInt();
        sc.nextLine(); // consume newline

        System.out.print("Enter Name: ");
        String name = sc.nextLine();

        System.out.print("Enter Roll No: ");
        String rollNo = sc.nextLine();

        System.out.print("Enter Class: ");
        String studentClass = sc.nextLine();

        System.out.print("Enter Marks: ");
        double marks = sc.nextDouble();
        sc.nextLine(); // consume newline

        System.out.print("Enter Address: ");
        String address = sc.nextLine();

        studentList.add(new Student(id, name, rollNo, studentClass, marks, address));
        saveDatabase();
        System.out.println("Student created successfully.");
    }

    // Display all students
    public static void displayStudents() {
        if (studentList.isEmpty()) {
            System.out.println("No students to display.");
        } else {
            for (Student student : studentList) {
                student.printStudentDetails();
                System.out.println("-------------------");
            }
        }
    }

    // Delete a student
    public static void deleteStudent(Scanner sc) {
        System.out.print("Enter Student ID to delete: ");
        int id = sc.nextInt();

        boolean removed = studentList.removeIf(student -> student.studentId == id);

        if (removed) {
            saveDatabase();
            System.out.println("Student deleted successfully.");
        } else {
            System.out.println("Student not found.");
        }
    }

    // Search for a student
    public static void searchStudent(Scanner sc) {
        System.out.print("Enter Student ID to search: ");
        int id = sc.nextInt();

        for (Student student : studentList) {
            if (student.studentId == id) {
                student.printStudentDetails();
                return;
            }
        }
        System.out.println("Student not found.");
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        loadDatabase(); // Load data when the program starts

        while (true) {
            System.out.println("\n--- Menu ---");
            System.out.println("1. Create Student");
            System.out.println("2. Display Students");
            System.out.println("3. Delete Student");
            System.out.println("4. Search Student");
            System.out.println("5. Exit");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    createStudent(sc);
                    break;
                case 2:
                    displayStudents();
                    break;
                case 3:
                    deleteStudent(sc);
                    break;
                case 4:
                    searchStudent(sc);
                    break;
                case 5:
                    System.out.println("Exiting...");
                    sc.close();
                    saveDatabase(); // Save data before exiting
                    return;
                default:
                    System.out.println("Invalid choice, try again.");
            }
        }
    }
}
