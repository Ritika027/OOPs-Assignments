package Assignment6;
import java.util.*;
class Array {
    Scanner sc = new Scanner(System.in);
    int size;
    int arr[];
    public void giveInput() {
        while (true) {
            try {
                System.out.print("Enter the size of the array: ");
                this.size = sc.nextInt();
                if (this.size <= 0) {
                    System.out.println("Enter a positive value for the size of the array.");
                } else if (this.size == 1) {
                    System.out.println("Size should be at least two.");
                } else {
                    break;
                }
            } catch (InputMismatchException e) {
                System.out.println("Invalid input. Please enter a valid integer value for the size of the array.");
                sc.nextLine();
            }
        }
        this.arr = new int[this.size];
        for (int i = 0; i < size; i++) {
            while (true) {
                try {
                    System.out.print("Enter element " + i + ": ");
                    this.arr[i] = sc.nextInt();
                    if (this.arr[i] < 0) {
                        System.out.println("enter a positive integer.");
                    } else {
                        break;
                    }
                } catch (InputMismatchException e) {
                    System.out.println("Invalid input. Please enter a valid integer value for element " + i + ".");
                    sc.nextLine();
                }
            }
        }
    }

    public void accessElement() {
        try {
            System.out.print("Enter the index of the element to be found: ");
            int index = sc.nextInt();
            System.out.println("Element at index " + index + " is: " + arr[index]);
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("You are trying to access an invalid index. Please enter a valid index. Max value of size is " + size);
        } catch (InputMismatchException e) {
            System.out.println("Invalid input. Please enter an integer index.");
            sc.nextLine();
        }
    }

    public void division() {
        try {
            System.out.print("Enter the index of the element for number_1: ");
            int index1 = sc.nextInt();
            int num1 = arr[index1];
            
            System.out.print("Enter the index of the element for number_2: ");
            int index2 = sc.nextInt();
            int num2 = arr[index2];

            System.out.println("The first number is: " + num1);
            System.out.println("The second number is: " + num2);
            System.out.println("Division of " + num1 + " and " + num2 + " is: " + (num1 / num2));
        } catch (ArithmeticException e) {
            System.out.println("Cannot divide by zero. Please ensure number_2 is not zero.");
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("You are trying to access an invalid index. Please enter a valid index. Max value of size is " + size);
        } catch (InputMismatchException e) {
            System.out.println("Invalid input. Please enter valid integer indices.");
            sc.nextLine();
        } finally {
            System.out.println("Finally block executed");
        }
    }
}

class Assignment6 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        Array obj1 = new Array();
        int choice;
        do {
            System.out.println("MENU");
            System.out.println("Press 1. Take array input ");
            System.out.println("Press 2. Access element in array ");
            System.out.println("Press 3. Divide the numbers ");
            System.out.println("Press 4. Exit code");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();
            switch (choice) {
                case 1:
                    obj1.giveInput();
                    break;
                case 2:
                    obj1.accessElement();
                    break;
                case 3:
                    obj1.division();
                    break;
                case 4:
                    System.out.println("Code exited successfully.");
                    break;
                default:
                    System.out.println("Enter a valid choice.");
                    break;
            }
        } while (choice != 0);
    }
}
